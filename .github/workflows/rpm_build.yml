name: Build RPM Package

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build (e.g., v3.1.0)'
        required: false
        default: ''

jobs:
  build-rpm:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install RPM build tools
      run: |
        sudo apt update
        sudo apt install -y rpm rpmbuild rpmdevtools python3-pip
        
    - name: Install Python dependencies
      run: |
        pip3 install PyInstaller PyQt6 PyYAML Pillow
        
    - name: Extract version from Build_Version file
      id: get_version
      run: |
        cd rpmbuild/SOURCES
        VERSION=$(grep "VERSION=" Build_Version | cut -d'=' -f2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Determine if this is a tag build
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "is_tag_build=true" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.tag }}" ]; then
          TAG_NAME="${{ github.event.inputs.tag }}"
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "is_tag_build=true" >> $GITHUB_OUTPUT
        else
          echo "is_tag_build=false" >> $GITHUB_OUTPUT
        fi
        
        echo "Building version: $VERSION"
        
    - name: Display build information
      run: |
        echo "Building RPM package..."
        echo "Version: ${{ steps.get_version.outputs.version }}"
        echo "Is tag build: ${{ steps.get_version.outputs.is_tag_build }}"
        if [ "${{ steps.get_version.outputs.is_tag_build }}" = "true" ]; then
          echo "Tag: ${{ steps.get_version.outputs.tag }}"
        fi
        
    - name: Update RPM version
      run: |
        cd rpmbuild/SOURCES
        chmod +x update_rpm_version.sh
        ./update_rpm_version.sh
        
    - name: Build PyInstaller executable
      run: |
        cd rpmbuild/SOURCES
        pyinstaller log_viewer.spec
        
    - name: Prepare RPM build environment
      run: |
        cp -r rpmbuild ~/
        
    - name: Build RPM package
      run: |
        rpmbuild -ba ~/rpmbuild/SPECS/LogViewer.spec
        
    - name: Find and copy RPM file
      run: |
        find ~/rpmbuild/RPMS -name "*.rpm" -exec cp {} . \;
        ls -la *.rpm
        
    - name: Rename RPM file
      run: |
        mv LogViewer-*.rpm LogViewer-${{ steps.get_version.outputs.version }}-0.rpm
        
    - name: Upload RPM artifact
      uses: actions/upload-artifact@v4
      with:
        name: rpm-package
        path: LogViewer-${{ steps.get_version.outputs.version }}-0.rpm
        retention-days: 30
        
    - name: Upload to release (if tag push)
      if: steps.get_version.outputs.is_tag_build == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.tag }}
        files: LogViewer-${{ steps.get_version.outputs.version }}-0.rpm
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}